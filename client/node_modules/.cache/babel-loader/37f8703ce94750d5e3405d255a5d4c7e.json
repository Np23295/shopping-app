{"ast":null,"code":"var _jsxFileName = \"/home/work/Desktop/work/22/client/src/components/CategoryMenu/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch } from 'react-redux';\nimport { updateCategories } from '../../reducers/categories/categoriesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CategoryMenu() {\n  _s();\n\n  const dispatch = useDispatch();\n  const storeObj = useSelector(store => store, shallowEqual);\n  const {\n    categories\n  } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch(updateCategories(categoryData.categories));\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch(updateCategories(categoryData.categories));\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), categories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleClick(item._id);\n      },\n      children: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoryMenu, \"yFEKdw1VZZb0fpTJ2Itnvlx8HMQ=\", true, function () {\n  return [useDispatch, useQuery];\n});\n\n_c = CategoryMenu;\nexport default CategoryMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"names":["React","useEffect","useQuery","useStoreContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","useDispatch","updateCategories","CategoryMenu","dispatch","storeObj","useSelector","store","shallowEqual","categories","state","loading","data","categoryData","forEach","category","then","handleClick","id","type","currentCategory","map","item","_id","name"],"sources":["/home/work/Desktop/work/22/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch } from 'react-redux';\nimport { updateCategories } from '../../reducers/categories/categoriesSlice';\n\nfunction CategoryMenu() {\n  const dispatch = useDispatch();\n  const storeObj = useSelector((store) => store, shallowEqual);\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch(updateCategories(categoryData.categories));\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch(updateCategories(categoryData.categories));\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SACEC,iBADF,EAEEC,uBAFF,QAGO,qBAHP;AAIA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,2CAAjC;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EACtB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAMI,QAAQ,GAAGC,WAAW,CAAEC,KAAD,IAAWA,KAAZ,EAAmBC,YAAnB,CAA5B;EAEA,MAAM;IAAEC;EAAF,IAAiBC,KAAvB;EAEA,MAAM;IAAEC,OAAF;IAAWC,IAAI,EAAEC;EAAjB,IAAkClB,QAAQ,CAACI,gBAAD,CAAhD;EAEAL,SAAS,CAAC,MAAM;IACd,IAAImB,YAAJ,EAAkB;MAChBT,QAAQ,CAACF,gBAAgB,CAACW,YAAY,CAACJ,UAAd,CAAjB,CAAR;MACAI,YAAY,CAACJ,UAAb,CAAwBK,OAAxB,CAAiCC,QAAD,IAAc;QAC5Cf,UAAU,CAAC,YAAD,EAAe,KAAf,EAAsBe,QAAtB,CAAV;MACD,CAFD;IAGD,CALD,MAKO,IAAI,CAACJ,OAAL,EAAc;MACnBX,UAAU,CAAC,YAAD,EAAe,KAAf,CAAV,CAAgCgB,IAAhC,CAAsCP,UAAD,IAAgB;QACnDL,QAAQ,CAACF,gBAAgB,CAACW,YAAY,CAACJ,UAAd,CAAjB,CAAR;MACD,CAFD;IAGD;EACF,CAXQ,EAWN,CAACI,YAAD,EAAeF,OAAf,EAAwBP,QAAxB,CAXM,CAAT;;EAaA,MAAMa,WAAW,GAAIC,EAAD,IAAQ;IAC1Bd,QAAQ,CAAC;MACPe,IAAI,EAAErB,uBADC;MAEPsB,eAAe,EAAEF;IAFV,CAAD,CAAR;EAID,CALD;;EAOA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGT,UAAU,CAACY,GAAX,CAAgBC,IAAD,iBACd;MAEE,OAAO,EAAE,MAAM;QACbL,WAAW,CAACK,IAAI,CAACC,GAAN,CAAX;MACD,CAJH;MAAA,UAMGD,IAAI,CAACE;IANR,GACOF,IAAI,CAACC,GADZ;MAAA;MAAA;MAAA;IAAA,QADD,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA3CQpB,Y;UACUF,W,EAKuBN,Q;;;KANjCQ,Y;AA6CT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}