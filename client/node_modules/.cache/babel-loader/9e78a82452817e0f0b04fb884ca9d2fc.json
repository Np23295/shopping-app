{"ast":null,"code":"var _jsxFileName = \"/home/work/Desktop/work/22/client/src/components/CategoryMenu/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { updateCategories } from '../../reducers/categories/categoriesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CategoryMenu() {\n  _s();\n\n  const dispatch = useDispatch();\n  const storeObj = useSelector(store => store, shallowEqual);\n  const categories = storeObj.categories;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch(updateCategories(categoryData.categories));\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch(updateCategories(categoryData.categories));\n      });\n    }\n  }, [categoryData, loading]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), categories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleClick(item._id);\n      },\n      children: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoryMenu, \"yFEKdw1VZZb0fpTJ2Itnvlx8HMQ=\", false, function () {\n  return [useDispatch, useSelector, useQuery];\n});\n\n_c = CategoryMenu;\nexport default CategoryMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"names":["React","useEffect","useQuery","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","shallowEqual","useDispatch","useSelector","updateCategories","CategoryMenu","dispatch","storeObj","store","categories","loading","data","categoryData","forEach","category","then","handleClick","id","type","currentCategory","map","item","_id","name"],"sources":["/home/work/Desktop/work/22/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport {\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { updateCategories } from '../../reducers/categories/categoriesSlice';\n\nfunction CategoryMenu() {\n  const dispatch = useDispatch();\n  const storeObj = useSelector((store) => store, shallowEqual);\n\n  const categories = storeObj.categories;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch(updateCategories(categoryData.categories));\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch(updateCategories(categoryData.categories));\n      });\n    }\n  }, [categoryData, loading]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category: </h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SACEC,uBADF,QAEO,qBAFP;AAGA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,WAApC,QAAuD,aAAvD;AACA,SAASC,gBAAT,QAAiC,2CAAjC;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EACtB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAMK,QAAQ,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAZ,EAAmBP,YAAnB,CAA5B;EAEA,MAAMQ,UAAU,GAAGF,QAAQ,CAACE,UAA5B;EAEA,MAAM;IAAEC,OAAF;IAAWC,IAAI,EAAEC;EAAjB,IAAkCf,QAAQ,CAACE,gBAAD,CAAhD;EAEAH,SAAS,CAAC,MAAM;IACd,IAAIgB,YAAJ,EAAkB;MAChBN,QAAQ,CAACF,gBAAgB,CAACQ,YAAY,CAACH,UAAd,CAAjB,CAAR;MACAG,YAAY,CAACH,UAAb,CAAwBI,OAAxB,CAAiCC,QAAD,IAAc;QAC5Cd,UAAU,CAAC,YAAD,EAAe,KAAf,EAAsBc,QAAtB,CAAV;MACD,CAFD;IAGD,CALD,MAKO,IAAI,CAACJ,OAAL,EAAc;MACnBV,UAAU,CAAC,YAAD,EAAe,KAAf,CAAV,CAAgCe,IAAhC,CAAsCN,UAAD,IAAgB;QACnDH,QAAQ,CAACF,gBAAgB,CAACQ,YAAY,CAACH,UAAd,CAAjB,CAAR;MACD,CAFD;IAGD;EACF,CAXQ,EAWN,CAACG,YAAD,EAAeF,OAAf,CAXM,CAAT;;EAaA,MAAMM,WAAW,GAAIC,EAAD,IAAQ;IAC1BX,QAAQ,CAAC;MACPY,IAAI,EAAEpB,uBADC;MAEPqB,eAAe,EAAEF;IAFV,CAAD,CAAR;EAID,CALD;;EAOA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGR,UAAU,CAACW,GAAX,CAAgBC,IAAD,iBACd;MAEE,OAAO,EAAE,MAAM;QACbL,WAAW,CAACK,IAAI,CAACC,GAAN,CAAX;MACD,CAJH;MAAA,UAMGD,IAAI,CAACE;IANR,GACOF,IAAI,CAACC,GADZ;MAAA;MAAA;MAAA;IAAA,QADD,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA3CQjB,Y;UACUH,W,EACAC,W,EAIuBN,Q;;;KANjCQ,Y;AA6CT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}